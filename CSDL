-- Create Users table
CREATE DATABASE DemoWeb
USE DemoWeb
CREATE TABLE Users (
    user_id INT PRIMARY KEY IDENTITY(1,1),
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL, -- Hashed password stored
    role VARCHAR(20) NOT NULL CHECK (role IN ('volunteer', 'coordinator')),
    name VARCHAR(100) NOT NULL,
    phone VARCHAR(20),
    address VARCHAR(255),
    language_preference VARCHAR(50),
    CONSTRAINT CHK_LanguagePreference CHECK (language_preference IN ('English', 'Vietnamese', NULL))
);

-- Create Activities table
CREATE TABLE Activities (
    activity_id INT PRIMARY KEY IDENTITY(1,1),
    title VARCHAR(200) NOT NULL,
    description TEXT,
    date_time DATETIME NOT NULL,
    location VARCHAR(255),
    max_participants INT NOT NULL CHECK (max_participants >= 0),
    coordinator_id INT NOT NULL,
    images VARCHAR(500), -- URL or path to images stored in AWS S3
    FOREIGN KEY (coordinator_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

-- Create Registrations table
CREATE TABLE Registrations (
    registration_id INT PRIMARY KEY IDENTITY(1,1),
    user_id INT NOT NULL,
    activity_id INT NOT NULL,
    registration_date DATETIME DEFAULT GETDATE(),
    check_in_status BIT NOT NULL DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE NO ACTION,
    FOREIGN KEY (activity_id) REFERENCES Activities(activity_id) ON DELETE NO ACTION,
    CONSTRAINT UC_Registration UNIQUE (user_id, activity_id)
);

-- Create Ratings table
CREATE TABLE Ratings (
    rating_id INT PRIMARY KEY IDENTITY(1,1),
    user_id INT NOT NULL,
    activity_id INT NOT NULL,
    rating TINYINT NOT NULL CHECK (rating >= 1 AND rating <= 5),
    comment VARCHAR(500),
    created_at DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE NO ACTION,
    FOREIGN KEY (activity_id) REFERENCES Activities(activity_id) ON DELETE NO ACTION
);

-- Create Notifications table
CREATE TABLE Notifications (
    notification_id INT PRIMARY KEY IDENTITY(1,1),
    user_id INT NOT NULL,
    activity_id INT,
    message VARCHAR(1000) NOT NULL,
    sent_at DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE NO ACTION,
    FOREIGN KEY (activity_id) REFERENCES Activities(activity_id) ON DELETE NO ACTION
);

-- Optional: Create indexes for better performance
CREATE INDEX IDX_Registrations_UserActivity ON Registrations(user_id, activity_id);
CREATE INDEX IDX_Ratings_UserActivity ON Ratings(user_id, activity_id);
CREATE INDEX IDX_Notifications_User ON Notifications(user_id);

-- 1. Sửa CHECK constraint của Users
ALTER TABLE Users DROP CONSTRAINT CHK_LanguagePreference;
ALTER TABLE Users
ADD CONSTRAINT CHK_LanguagePreference
CHECK (language_preference IN ('English', 'Vietnamese') OR language_preference IS NULL);

-- 2. Sửa kiểu dữ liệu description từ TEXT → VARCHAR(MAX)
ALTER TABLE Activities ADD description_tmp VARCHAR(MAX);
UPDATE Activities SET description_tmp = CAST(description AS VARCHAR(MAX));
ALTER TABLE Activities DROP COLUMN description;
EXEC sp_rename 'Activities.description_tmp', 'description', 'COLUMN';

-- 3. Tạo thêm chỉ mục
CREATE INDEX IDX_Activities_DateTime ON Activities(date_time);
CREATE INDEX IDX_Users_Email ON Users(email);

